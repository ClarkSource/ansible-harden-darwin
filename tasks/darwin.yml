---
## https://github.com/herrbischoff/awesome-osx-command-line
## http://csrc.nist.gov/publications/drafts/800-179/sp800_179_draft.pdf

## just to ensure playbook doesn't get block by google santa during provisioning
# OSX 10.13+: can't do it without GUI interaction...
- name: Check santa kernel driver is loaded
  ansible.builtin.shell: "kextstat | grep -q com.google.santa-driver"
  changed_when: false
  ignore_errors: true
  register: santakext
- name: Import google-santa-whitelist
  ansible.builtin.import_tasks: google-santa-whitelist.yml
  vars:
    type: hash
    path: /System/Library/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python
    action: whitelist
    match: White
  when: santakext.rc == 0

- name: Check if developer tools are installed
  ansible.builtin.stat:
    path: /Applications/Xcode.app
  register: devtools
- name: FATAL
  ansible.builtin.fail:
    msg: "FATAL! Missing Xcode and developer tools."
  when: harden_darwin_hard_fail_developertools and not devtools.stat.exists

- name: Ensure archives directory exists
  ansible.builtin.file:
    dest: "{{ install_archives }}"
    state: directory
    mode: '0755'
  become: yes
  when:
    - install_archives != '/tmp'
    - install_archives != '/private/tmp'
    - install_archives != '/Users/Shared'

- name: Import darwin-updates
  ansible.builtin.import_tasks: darwin-updates.yml

- name: Check wake for network access status
  ansible.builtin.command: "/usr/sbin/systemsetup -getwakeonnetworkaccess"
  changed_when: false
  register: wakestate
- name: Disable wake for network access
  ansible.builtin.command:  # noqa no-changed-when
    cmd: "/usr/sbin/systemsetup -setwakeonnetworkaccess off"
  when: "'Off' not in wakestate.stdout and 'Not supported on this machine.' not in wakestate.stdout"

## http://www.macos.utah.edu/documentation/administration/pmset.html
## FIXME! not idempotent
- name: Enforce hibernation and evict Filevault keys from memory instead of traditional sleep to memory  # noqa no-changed-when
  ansible.builtin.command: "pmset -a {{ item.k }} {{ item.v }}"
  with_items:
    - { k: 'destroyfvkeyonstandby', v: '1' }
    ## https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/pmset.1.html
    ## FIXME! ?10.10: makes mac hibernate directly. ok on 10.11+10.12
    - { k: 'hibernatemode', v: '25' }
    ## https://github.com/drduh/macOS-Security-and-Privacy-Guide/issues/124
    ## FIXME! The error was: 'dict object' has no attribute 'k' ???
    # - { k: 'powernap', v: '0' }
    # - { k: 'standby', v: '0' }
    # - { k: 'standbydelay', v: '0' }
    # - { k: 'autopoweroff', v: '0' }
  when: harden_darwin_enforce_hibernate

# - name: Reset Accessibility settings
#   ansible.builtin.command: tccutil reset Accessibility

# - osx_defaults: domain=NSGlobalDomain key=WebKitDeveloperExtras type=bool value=true state=present
- name: Screen saver with password
  community.general.osx_defaults:
    domain: com.apple.screensaver
    key: askForPassword
    type: int
    value: 1
    state: present

- name: Disable Creation of Metadata Files on Network Volumes
  community.general.osx_defaults:
    domain: com.apple.desktopservices
    key: DSDontWriteNetworkStores
    type: bool
    value: true
    state: present
- name: Disable Creation of Metadata Files on USB Volumes
  community.general.osx_defaults:
    domain: com.apple.desktopservices
    key: DSDontWriteUSBStores
    type: bool
    value: true
    state: present
- name: Check for Software Updates Daily
  community.general.osx_defaults:
    domain: com.apple.SoftwareUpdate
    key: ScheduleFrequency
    type: int
    value: 1
    state: present
## FIXME! it seems type can be int or bool
- name: Enable infrared receiver
  community.general.osx_defaults:
    domain: /Library/Preferences/com.apple.driver.AppleIRController
    key: DeviceEnabled
    type: "{{ darwin_booltype }}"
    value: "{{ darwin_booltype_true }}"
    state: present
  when: harden_darwin_infrared
- name: Disable infrared receiver
  community.general.osx_defaults:
    domain: /Library/Preferences/com.apple.driver.AppleIRController
    key: DeviceEnabled
    type: "{{ darwin_booltype }}"
    value: "{{ darwin_booltype_false }}"
    state: present
  when: not harden_darwin_infrared
## FIXME! it seems type can be int or bool, and different even between 2 Sierra/10.12 (depends if system upgraded?)
- name: Enable bluetooth
  community.general.osx_defaults:
    domain: /Library/Preferences/com.apple.Bluetooth
    key: ControllerPowerState
    type: "{{ darwin_booltype }}"
    value: "{{ darwin_booltype_true }}"
    state: present
  when: not harden_darwin_disable_bluetooth
- name: Disable bluetooth
  community.general.osx_defaults:
    domain: /Library/Preferences/com.apple.Bluetooth
    key: ControllerPowerState
    type: "{{ darwin_booltype }}"
    value: "{{ darwin_booltype_false }}"
    state: present
  when: harden_darwin_disable_bluetooth
  register: osx_bluetooth
  notify:
    - Kill osx bluetooth

- name: Configure Captive Portal
  community.general.osx_defaults:
    domain: /Library/Preferences/SystemConfiguration/com.apple.captive.control
    key: Active
    type: bool
    value: "{{ harden_darwin_captiveportal }}"
    state: present

- name: Configure FastUserSwitching
  community.general.osx_defaults:
    domain: /Library/Preferences/.GlobalPreferences
    key: MultipleSessionEnabled
    type: bool
    value: "{{ harden_darwin_fastuserswitching }}"
    state: present

- name: Configure Disable FDE AutoLogin (Filevault DoubleLogin) = {{ harden_darwin_disablefdeautologin }}
  community.general.osx_defaults:
    domain: /Library/Preferences/com.apple.loginwindow
    key: DisableFDEAutoLogin
    type: bool
    value: "{{ harden_darwin_disablefdeautologin }}"
    state: present

- name: Disable bonjour multicast advertisements
  community.general.osx_defaults:
    domain: /Library/Preferences/com.apple.mDNSResponder
    key: NoMulticastAdvertisements
    type: bool
    value: YES
    state: present

- name: Review CrashReporter configuration
  community.general.osx_defaults:
    domain: com.apple.CrashReporter
    key: DialogType
    type: string
    value: "{{ harden_darwin_crashreporter }}"
    state: present

- name: Review CrashReporter configuration - use Notifications
  community.general.osx_defaults:
    domain: com.apple.CrashReporter
    key: UseUNC
    type: int
    value: "{{ harden_darwin_crashreporter_useunc }}"
    state: present

## per user settings
# - ansible.builtin.import_tasks: darwin-user.yml
#   # FIXME! https://github.com/ansible/ansible/issues/19729
#   become: yes
#   become_user: "{{ item }}"
#   with_items: "{{ harden_darwin_users }}"

## http://jacobsalmela.com/bash-script-enable-access-assistive-devices-programmatically-os-x-mavericks-10-9-x-simulate-keystrokes/
- name: Check if TCC.db file exists
  ansible.builtin.stat:
    path: '/Library/Application Support/com.apple.TCC/TCC.db'
  register: tccdb
## incompatible with 10.12+, https://github.com/Homebrew/brew/pull/1029
- name: TCC
  when: ansible_distribution_version is version_compare( '10.12', '<')
  block:
    - name: Check current tcc.db
      ansible.builtin.command: "sqlite3 \"/Library/Application Support/com.apple.TCC/TCC.db\" \"SELECT * FROM access\""
      register: tccselect
      changed_when: false
    - name: Allow osascript to command keyboard/mouse
      ## works on osx but not travis osx, latest osx (10.11 have 7 columns vs 6 before)
      ansible.builtin.command:  # noqa no-changed-when
        cmd: >
          sqlite3 "/Library/Application Support/com.apple.TCC/TCC.db"
            "INSERT or REPLACE INTO access('service','client','client_type','allowed','prompt_count','csreq')
            VALUES('kTCCServiceAccessibility','com.apple.RemoteDesktopAgent',1,1,1,NULL)"
      become: yes
      when: tccdb.stat.exists and not ('com.apple.RemoteDesktopAgent' in tccselect.stdout)
    - name: WARNING
      ansible.builtin.debug:
        msg: "WARNING! didn't found /Library/Application\ Support/com.apple.TCC/TCC.db"
      when: not tccdb.stat.exists
- name: WARNING
  ansible.builtin.debug:
    msg: "Warning! macOS Sierra+ accessibility can't be enable from command line."
  when: ansible_distribution_version is version_compare( '10.12', '>=')

- name: Disable IPv6 noise
  ansible.posix.sysctl:
    name: "{{ item.k }}"
    value: "{{ item.v }}"
    state: present
    reload: no
  with_items:
    ## setting net.inet6.ip6.accept_rtadv failed: sysctl: oid 'net.inet6.ip6.accept_rtadv' is read only
    # - { k: 'net.inet6.ip6.accept_rtadv', v: 0 }
    - { k: 'net.inet6.icmp6.rediraccept', v: 0 }
    - { k: 'net.inet6.icmp6.nodeinfo', v: 0 }
    - { k: 'net.inet6.icmp6.nd6_accept_6to4', v: 0 }

## https://github.com/ansible/ansible-modules-extras/pull/995/files
- name: Disable services
  when: >
    harden_darwin_launchd_services_unload is defined and harden_darwin_launchd_services_unload and
    harden_darwin_launchd_services_unload != []
  block:
    ## FIXME! not idempotent
    - name: Disable launchd services
      ansible.builtin.command: "launchctl unload -w {{ item }}"  # noqa no-changed-when
      with_items: "{{ harden_darwin_launchd_services_unload }}"

## 2016/12 website down?
- name: Download fix-macosx.py to disable search engines 'leak'
  ansible.builtin.get_url:
    url: https://fix-macosx.com/fix-macosx.py
    dest: "{{ install_archives }}/fix-macosx.py"
    mode: '0755'
    checksum: "sha256:b5a07e12269a11341c21f5a1a0951d9b9dbb002681ea1c251a325dc04951b9b3"
    validate_certs: false
  when: harden_darwin_fixmacosleak

## as your user?
# - name: execute fix-macosx.py
#   command: 'python {{ install_archives }}/fix-macosx.py'
#   when: harden_darwin_fixmacosleak

- name: Check if fsmon is present
  ansible.builtin.stat:
    path: "{{ install_archives }}/fsmon"
  register: fsmon
- name: Git clone fsmon
  ansible.builtin.git:
    repo: https://github.com/nowsecure/fsmon.git
    dest: "{{ install_archives }}/fsmon"
    version: "{{ fsmon_version | default('51f1ea7019c3b5f0ab2e646c68a3174fc9ff8931') }}"
  when: not fsmon.stat.exists and devtools.stat.exists

## https://github.com/iSECPartners/yontma-mac

- name: Import firewall-pf
  ansible.builtin.import_tasks: firewall-pf.yml

- name: Import firewall
  ansible.builtin.import_tasks: firewall.yml

- name: Import usb
  ansible.builtin.import_tasks: usb.yml
  when: harden_darwin_disable_usb is defined and harden_darwin_disable_usb

- name: Import wpad-disable
  ansible.builtin.import_tasks: wpad-disable.yml
  when: harden_darwin_disable_wpad is defined and harden_darwin_disable_wpad

- name: Import osxlockdown
  ansible.builtin.import_tasks: osxlockdown.yml
  when: harden_darwin_osxlockdown is defined and harden_darwin_osxlockdown

- name: Import osx-config-check
  ansible.builtin.import_tasks: osx-config-check.yml
  when: harden_darwin_osxconfigcheck is defined and harden_darwin_osxconfigcheck

- name: Import google-santa
  ansible.builtin.import_tasks: google-santa.yml
  when: harden_darwin_santa is defined and harden_darwin_santa
  tags:
    - santa

- name: Import osquery
  ansible.builtin.import_tasks: osquery.yml
  when: harden_darwin_osquery is defined and harden_darwin_osquery

- name: Import objective-ransomwhere
  ansible.builtin.import_tasks: objectivesee-ransomwhere.yml
  when: harden_darwin_ransomwhere and harden_darwin_bitbucket_download
- name: Import objective-oversight
  ansible.builtin.import_tasks: objectivesee-oversight.yml
  when: harden_darwin_oversight and harden_darwin_bitbucket_download
- name: Import objective-blockblock
  ansible.builtin.import_tasks: objectivesee-blockblock.yml
  when: harden_darwin_blockblock and harden_darwin_bitbucket_download
- name: Import objective-knockknock
  ansible.builtin.import_tasks: objectivesee-knockknock.yml
  when: harden_darwin_knockknock and harden_darwin_bitbucket_download
- name: Import objective-dnd
  ansible.builtin.import_tasks: objectivesee-dnd.yml
  when: harden_darwin_dnd and harden_darwin_bitbucket_download

- name: Import immutable
  ansible.builtin.import_tasks: immutable.yml
- name: Import darwin-openbsm
  ansible.builtin.import_tasks: darwin-openbsm.yml
- name: Import darwin-certificates
  ansible.builtin.import_tasks: darwin-certificates.yml
  when: harden_darwin_certificates
- name: Import mobileconfig
  ansible.builtin.import_tasks: mobileconfig.yml
- name: Import darwin-hostname
  ansible.builtin.import_tasks: darwin-hostname.yml
  when: harden_darwin_hostname is defined and harden_darwin_hostname
