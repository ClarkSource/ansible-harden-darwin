---
## https://github.com/herrbischoff/awesome-osx-command-line
## http://csrc.nist.gov/publications/drafts/800-179/sp800_179_draft.pdf

## just to ensure playbook doesn't get block by google santa during provisioning
# OSX 10.13+: can't do it without GUI interaction...
- name: check santa kernel driver is loaded
  shell: "kextstat | grep -q com.google.santa-driver"
  changed_when: false
  ignore_errors: true
  register: santakext
- include: "google-santa-whitelist.yml type=hash path=/System/Library/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python action=whitelist match=White"
  when: santakext.rc == 0

- name: Check if developer tools are installed
  stat:
    path: /Applications/Xcode.app
  register: devtools
- name: FATAL
  fail: msg="FATAL! Missing Xcode and developper tools."
  when: harden_darwin_hard_fail_developertools

- name: ensure archives directory exists
  file: dest="{{ install_archives }}" mode=0755 state=directory
  become: yes

- include: darwin-updates.yml

- name: check wake for network access status
  command: "/usr/sbin/systemsetup -getwakeonnetworkaccess"
  changed_when: false
  register: wakestate
- name: disable wake for network access
  command: "/usr/sbin/systemsetup -setwakeonnetworkaccess off"
  when: "'Off' not in wakestate.stdout and 'Not supported on this machine.' not in wakestate.stdout"

## http://www.macos.utah.edu/documentation/administration/pmset.html
## FIXME! not idempotent
- name: enforce hibernation and evict Filevault keys from memory instead of traditional sleep to memory
  command: "pmset -a {{ item.k }} {{ item.v }}"
  with_items:
    - { k: 'destroyfvkeyonstandby', v: '1' }
## https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/pmset.1.html
## FIXME! ?10.10: makes mac hibernate directly. ok on 10.11+10.12
    - { k: 'hibernatemode', v: '25' }
## https://github.com/drduh/macOS-Security-and-Privacy-Guide/issues/124
## FIXME! The error was: 'dict object' has no attribute 'k' ???
#    - { k: 'powernap', v: '0' }
#    - { k: 'standby', v: '0' }
#    - { k: 'standbydelay', v: '0' }
#    - { k: 'autopoweroff', v: '0' }

#- name: Reset Accessibility settings
#  command: tccutil reset Accessibility

#- osx_defaults: domain=NSGlobalDomain key=WebKitDeveloperExtras type=bool value=true state=present
- name: screen saver with password
  osx_defaults: domain=com.apple.screensaver key=askForPassword type=int value=1 state=present

- name: Disable Creation of Metadata Files on Network Volumes
  osx_defaults: domain=com.apple.desktopservices key=DSDontWriteNetworkStores type=bool value=true state=present
- name: Disable Creation of Metadata Files on USB Volumes
  osx_defaults: domain=com.apple.desktopservices key=DSDontWriteUSBStores type=bool value=true state=present
- name: Check for Software Updates Daily
  osx_defaults: domain=com.apple.SoftwareUpdate key=ScheduleFrequency type=int value=1 state=present
## FIXME! it seems type can be int or bool
- name: Enable infrared receiver
  osx_defaults:
    domain: /Library/Preferences/com.apple.driver.AppleIRController
    key: DeviceEnabled
    type: "{{ darwin_booltype }}"
    value: "{{ darwin_booltype_true }}"
    state: present
  when: harden_darwin_infrared
- name: Disable infrared receiver
  osx_defaults:
    domain: /Library/Preferences/com.apple.driver.AppleIRController
    key: DeviceEnabled
    type: "{{ darwin_booltype }}"
    value: "{{ darwin_booltype_false }}"
    state: present
  when: not harden_darwin_infrared
  ignore_errors: true
## FIXME! it seems type can be int or bool, and different even between 2 Sierra/10.12 (depends if system upgraded?)
- name: Enable bluetooth
  osx_defaults:
    domain: /Library/Preferences/com.apple.Bluetooth
    key: ControllerPowerState
    type: "{{ darwin_booltype }}"
    value: "{{ darwin_booltype_true }}"
    state: present
  when: not harden_darwin_disable_bluetooth
  ignore_errors: true
- name: Disable bluetooth
  osx_defaults:
    domain: /Library/Preferences/com.apple.Bluetooth
    key: ControllerPowerState
    type: "{{ darwin_booltype }}"
    value: "{{ darwin_booltype_false }}"
    state: present
  when: harden_darwin_disable_bluetooth
  register: osx_bluetooth
  notify:
    - kill osx bluetooth
  ignore_errors: true

- name: Configure Captive Portal
  osx_defaults:
    domain: /Library/Preferences/SystemConfiguration/com.apple.captive.control
    key: Active
    type: bool
    value: "{{ harden_darwin_captiveportal }}"
    state: present

- name: Configure FastUserSwitching
  osx_defaults:
    domain: /Library/Preferences/.GlobalPreferences
    key: MultipleSessionEnabled
    type: bool
    value: "{{ harden_darwin_fastuserswitching }}"
    state: present

- name: Configure Disable FDE AutoLogin (Filevault DoubleLogin) = {{ harden_darwin_disablefdeautologin }}
  osx_defaults:
    domain: /Library/Preferences/com.apple.loginwindow
    key: DisableFDEAutoLogin
    type: bool
    value: "{{ harden_darwin_disablefdeautologin }}"
    state: present

- name: Disable bonjour multicast advertisements
  osx_defaults:
    domain: /Library/Preferences/com.apple.mDNSResponder
    key: NoMulticastAdvertisements
    type: bool
    value: YES
    state: present

## per user settings
#- include: darwin-user.yml
## FIXME! https://github.com/ansible/ansible/issues/19729
#  become: yes
#  become_user: "{{ item }}"
#  with_items: "{{ harden_darwin_users }}"

## http://jacobsalmela.com/bash-script-enable-access-assistive-devices-programmatically-os-x-mavericks-10-9-x-simulate-keystrokes/
- stat: path='/Library/Application Support/com.apple.TCC/TCC.db'
  register: tccdb
## incompatible with 10.12+, https://github.com/Homebrew/brew/pull/1029
- block:
    - name: check current tcc.db
      command: "sqlite3 \"/Library/Application Support/com.apple.TCC/TCC.db\" \"SELECT * FROM access\""
      register: tccselect
      changed_when: false
    - name: Allow osascript to command keyboard/mouse
    ## works on osx but not travis osx, latest osx (10.11 have 7 columns vs 6 before)
      command: >
        sqlite3 "/Library/Application Support/com.apple.TCC/TCC.db"
          "INSERT or REPLACE INTO access('service','client','client_type','allowed','prompt_count','csreq')
          VALUES('kTCCServiceAccessibility','com.apple.RemoteDesktopAgent',1,1,1,NULL)"
      become: yes
      when: tccdb.stat.exists and not ('com.apple.RemoteDesktopAgent' in tccselect.stdout)
    - debug: msg="WARNING! didn't found /Library/Application\ Support/com.apple.TCC/TCC.db"
      when: not tccdb.stat.exists
  when: ansible_distribution_version is version_compare( '10.12', '<')
- debug: msg='Warning! macOS Sierra+ accessibility can\'t be enable from command line.'
  when: ansible_distribution_version is version_compare( '10.12', '>=')

- name: disable IPv6 noise
  sysctl: name="{{ item.k }}" value="{{ item.v }}" state=present reload=no
  with_items:
## setting net.inet6.ip6.accept_rtadv failed: sysctl: oid 'net.inet6.ip6.accept_rtadv' is read only
#    - { k: 'net.inet6.ip6.accept_rtadv', v: 0 }
    - { k: 'net.inet6.icmp6.rediraccept', v: 0 }
    - { k: 'net.inet6.icmp6.nodeinfo', v: 0 }
    - { k: 'net.inet6.icmp6.nd6_accept_6to4', v: 0 }

## https://github.com/ansible/ansible-modules-extras/pull/995/files
- block:
## FIXME! not idempotent
    - name: disable launchd services
      command: "launchctl unload -w {{ item }}"
      with_items: "{{ harden_darwin_launchd_services_unload }}"
  when: >
    harden_darwin_launchd_services_unload is defined and harden_darwin_launchd_services_unload and
    harden_darwin_launchd_services_unload != []

## 2016/12 website down?
- name: download fix-macosx.py to disable search engines 'leak'
  get_url:
    url: https://fix-macosx.com/fix-macosx.py
    dest: "{{ install_archives }}/fix-macosx.py"
    mode: '0755'
    sha256sum: "b5a07e12269a11341c21f5a1a0951d9b9dbb002681ea1c251a325dc04951b9b3"
    validate_certs: false
## as your user?
#- name: execute fix-macosx.py
#  command: 'python {{ install_archives }}/fix-macosx.py'
  when: harden_darwin_fixmacosleak

- stat: path={{ install_archives }}/fsmon
  register: fsmon
- name: git clone fsmon
  git:
    repo=https://github.com/nowsecure/fsmon.git
    dest={{ install_archives }}/fsmon
  when: not fsmon.stat.exists and devtools.stat.exists

## https://github.com/iSECPartners/yontma-mac

- include: firewall-pf.yml

- include: firewall.yml

- include: usb.yml
  when: harden_darwin_disable_usb is defined and harden_darwin_disable_usb

- include: wpad-disable.yml
  when: harden_darwin_disable_wpad is defined and harden_darwin_disable_wpad

- include: osxlockdown.yml
  when: harden_darwin_osxlockdown is defined and harden_darwin_osxlockdown

- include: osx-config-check.yml
  when: harden_darwin_osxconfigcheck is defined and harden_darwin_osxconfigcheck

- include: google-santa.yml
  when: harden_darwin_santa is defined and harden_darwin_santa
  tags:
    - santa

- include: osquery.yml
  when: harden_darwin_osquery is defined and harden_darwin_osquery

- include: objectivesee-ransomwhere.yml
  when: harden_darwin_ransomwhere
- include: objectivesee-oversight.yml
  when: harden_darwin_oversight
- include: objectivesee-blockblock.yml
  when: harden_darwin_blockblock
- include: objectivesee-knockknock.yml
  when: harden_darwin_knockknock
- include: objectivesee-dnd.yml
  when: harden_darwin_dnd
- include: objectivesee-lulu.yml
  when: >
    harden_darwin_lulu and ansible_distribution_version is version_compare( '10.12', '>=') and
    devtools.stat.exists

- include: immutable.yml
- include: darwin-openbsm.yml
- include: darwin-certificates.yml
  when: harden_darwin_certificates
- include: mobileconfig.yml
- include: darwin-hostname.yml
  when: harden_darwin_hostname is defined and harden_darwin_hostname != ''
