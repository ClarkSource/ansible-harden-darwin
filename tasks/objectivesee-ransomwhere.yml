---

## https://objective-see.com/products/ransomwhere.html
- name: Set variables for Ransomwhere
  ansible.builtin.set_fact:
    app_name: RansomWhere
    app_url: https://bitbucket.org/objective-see/deploy/downloads/RansomWhere_1.2.5.zip
    app_checksum: 'sha256:091a61bb99f5fe73944cda2b6ad26efb6d7ffaf8ddd391d237b82afb10b46a67'

- name: Download {{ app_name }}
  ansible.builtin.get_url:
    url: "{{ app_url }}"
    dest: "{{ install_archives }}/{{ app_url | basename }}"
    mode: '0644'
    checksum: "{{ app_checksum }}"
    validate_certs: "{{ harden_darwin_bitbucket_sslcert_validate | default(true) }}"
  become: yes

## FIXME! Unable to find '/private/var/_install/RansomWhere_1.1.0.zip' in expected paths.
- name: Decompress {{ app_name }}
  ansible.builtin.unarchive:
    src: "{{ install_archives }}/{{ app_url | basename }}"
    dest: "{{ install_archives }}"
    mode: '0755'
    creates: "{{ install_archives }}/{{ app_name }}_Installer.app/Contents/MacOS/{{ app_name }}_Installer"
  become: yes

- name: Ensure app is allowed by Google Santa
  when: harden_darwin_santa is defined and harden_darwin_santa and harden_darwin_santa_mode == 2
  block:
    - name: Include google-santa-whitelist
      ansible.builtin.include_tasks: google-santa-whitelist.yml
      vars:
        type: hash
        path: "{{ item }}"
        action: whitelist
        match: White
      with_items:
        - "{{ install_archives }}/{{ app_name }}_Installer.app/Contents/MacOS/{{ app_name }}_Installer"

## FIXME! always return 'install ok' and rc = 0
- name: Install ransomwhere
  ansible.builtin.command: "{{ install_archives }}/{{ app_name }}_Installer.app/Contents/MacOS/{{ app_name }}_Installer -install"
  args:
    creates: "/Library/LaunchDaemons/com.objective-see.ransomwhere.plist"
  become: yes

- name: Ensure app is allowed by Google Santa
  when: harden_darwin_santa is defined and harden_darwin_santa and harden_darwin_santa_mode == 2
  block:
    - name: Include google-santa-whitelist
      ansible.builtin.include_tasks: google-santa-whitelist.yml
      vars:
        type: hash
        path: "{{ item }}"
        action: whitelist
        match: White
      with_items:
        - "/Library/RansomWhere/RansomWhere"

## can eventually replicate /Library/RansomWhere/approvedBinaries.plist
