---

## https://www.objective-see.com/products/blockblock.html
- name: Set variables for BlockBlock
  ansible.builtin.set_fact:
    app_name: BlockBlock Installer
    app_url: https://github.com/objective-see/BlockBlock/releases/download/v2.1.4/BlockBlock_2.1.4.zip
    app_checksum: 'sha256:8c12d13c9327701245ccdfee6217296baf4086ae359e025c98c4980a7ce466ee'

- name: download {{ app_name }}
  ansible.builtin.get_url:
    url: "{{ app_url }}"
    dest: "{{ install_archives }}/{{ app_url | basename }}"
    mode: '0644'
    checksum: "{{ app_checksum }}"
    validate_certs: "{{ harden_darwin_bitbucket_sslcert_validate | default(true) }}"
  become: yes

- name: decompress {{ app_name }}
  ansible.builtin.unarchive:
    src: "{{ install_archives }}/{{ app_url | basename }}"
    dest: "{{ install_archives }}"
    mode: '0755'
    creates: "{{ install_archives }}/{{ app_name }} Installer.app/Contents/MacOS/{{ app_name }}"
  become: yes

- name: Ensure app is allowed by Google Santa
  block:
    - include_tasks: google-santa-whitelist.yml
      vars:
        type: hash
        path: "{{ item }}"
        action: whitelist
        match: White
      with_items:
        - "{{ install_archives }}/{{ app_name }} Installer.app/Contents/MacOS/{{ app_name }}"
  when: harden_darwin_santa is defined and harden_darwin_santa and harden_darwin_santa_mode == 2

## FIXME! always return 'install ok' and rc = 0
- name: install {{ app_name }}
  ansible.builtin.command: "\"{{ install_archives }}/{{ app_name }}.app/Contents/MacOS/{{ app_name }}\" -install"
  args:
    creates: "/Library/Objective-See/BlockBlock"
  become: yes

# /Library/Objective-See/BlockBlock/whitelist.plist ?
