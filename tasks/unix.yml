---

- stat: path=/etc/ssh/ssh_host_ed25519_key
  register: sshkey
- name: Generate any missing SSH host key
  command: ssh-keygen -A
  when: not sshkey.stat.exists and ((ansible_os_family == "RedHat" and ansible_distribution_version == '7') or ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')

- stat: path=/etc/ssh/sshd_config
  register: sshdconf
- block:
    - name: Restrict sshd config (1)
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        backup: yes
        validate: "sshd -f %s -T"
## avoid to add at end of file after a restricting match...
        insertafter: "^#PermitEmptyPasswords"
      with_items:
        - { regexp: '^PasswordAuthentication', line: 'PasswordAuthentication no' }
        - { regexp: '^PermitRootLogin', line: 'PermitRootLogin without-password' }
        - { regexp: '^LogLevel', line: 'LogLevel VERBOSE' }
        - { regexp: '^TCPKeepAlive', line: 'TCPKeepAlive no' }
        - { regexp: '^UseDNS', line: 'UseDNS yes' }
      notify:
        - restart sshd
    - name: Restrict sshd config - UsePrivilegeSeparation sandbox
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        backup: yes
        validate: "sshd -f %s -T"
## avoid to add at end of file after a restricting match...
        insertafter: "^#UsePrivilegeSeparation"
      with_items:
        - { regexp: '^UsePrivilegeSeparation', line: 'UsePrivilegeSeparation sandbox' }
      notify:
        - restart sshd
    - name: Disable UseKeyChain ssh config - 10.12.2+
      lineinfile:
        dest: /etc/ssh/ssh_config
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        backup: yes
        validate: "ssh -F %s -G localhost"
## avoid to add at end of file after a restricting match...
        insertafter: "^Host *"
      with_items:
        - { regexp: '^    UseKeyChain', line: '    UseKeychain no' }
      notify:
        - restart sshd
      when: ansible_distribution_version is version_compare( '10.12.2', '>=')
  when: sshdconf.stat.exists
- name: where is sshd_config if not standard?
  command: "ls -l /etc/ssh/sshd_config /private/etc/ssh/"
  when: not sshdconf.stat.exists
  ignore_errors: true

#- name: sshd configuration file update
#  template: src=sshd_config
#    dest=/etc/ssh/sshd_config
#    backup=yes
#    owner=0 group=0 mode=0644
#    validate='/usr/sbin/sshd -T -f %s'
#  notify:
#    - restart sshd

#- name: iptables configuration file update
#  template: src=rules.v4
#    dest=/etc/iptables/rules.v4
#    backup=yes
#    owner=0 group=0 mode=0644
#  notify:
#    - restart iptables

## Bash history to syslog (since 4.1) but need re-compile for most distributions
## https://isc.sans.edu/forums/diary/Improving+Bash+Forensics+Capabilities/20887/
## https://blog.rootshell.be/2009/02/28/bash-history-to-syslog/
## http://blog.hellosa.org/2013/07/27/log-bash-history-to-syslog-on-centos-6.html
## http://binbash.fr/2012/09/05/bash-syslog/

