---

## http://wiki.cacert.org/FAQ/ImportRootCert#Using_the_command_line
## https://certsimple.com/blog/control-the-ssl-cas-your-browser-trusts
## https://codeascraft.com/2013/07/16/reducing-the-roots-of-some-evil/
## http://www.ifca.ai/fc14/papers/fc14_submission_100.pdf
## https://apple.stackexchange.com/questions/24640/how-do-i-remove-many-system-roots-from-apple-system-keychain

- name: Ensure backup directory exists
  file:
    dest: "{{ item }}"
    mode: '0755'
    state: directory
  with_items:
    - "{{ backupdir }}"

- name: Backup certificate keychains
  command: >
    install -m 0400 {{ item }}
      {{ backupdir }}/{{ item | regex_replace('/', '-') }}-{{ ansible_date_time.date }}
  args:
    creates: "{{ backupdir }}/{{ item | regex_replace('/', '-') }}-{{ ansible_date_time.date }}"
  with_items:
## Note: SIP prevents us from writing in /System
    - /System/Library/Keychains/SystemRootCertificates.keychain
    - /Library/Keychains/System.keychain
- name: Export trust settings
  command: >
    security trust-settings-export -d {{ backupdir }}/trust_settings-{{ ansible_date_time.date }}.plist
  args:
    creates: "{{ backupdir }}/trust_settings-{{ ansible_date_time.date }}.plist"
## travis: "stderr": "SecTrustSettingsCreateExternalRepresentation: No Trust Settings were found."
  ignore_errors: true

- name: Download extra certificates
  get_url:
    url: "{{ item.u }}"
    dest: "{{ backupdir }}/{{ item.u | basename }}"
    mode: '0644'
    validate_certs: "{{ item.validate }}"
    checksum: "{{ item.c }}"
  with_items: "{{ harden_darwin_certificates_dl }}"

- name: Copy extra certificates from orchestrator
  copy:
    src: "{{ item }}"
    dest: "{{ backupdir }}/{{ item | basename }}"
    mode: '0644'
  with_items: "{{ harden_darwin_certificates_files }}"

- name: dump system certificates
  command: "security dump-keychain /System/Library/Keychains/SystemRootCertificates.keychain"
  register: systemrootcert
  changed_when: false
## Not allowed... 'security: SecKeychainItemDelete: UNIX[Operation not permitted]'
- name: remove certificate to keychain - admin store (hash)
  command: >
    security delete-certificate -Z '{{ item }}' /System/Library/Keychains/SystemRootCertificates.keychain
  with_items: "{{ harden_darwin_certificates_hash_delete }}"
- name: remove certificate to keychain - admin store (common name)
  command: >
    security delete-certificate -c '{{ item }}' /System/Library/Keychains/SystemRootCertificates.keychain
  with_items: "{{ harden_darwin_certificates_cn_delete }}"

## FIXME! not idempotent
## Can't select by hash or cn
#$ security export -k /System/Library/Keychains/SystemRootCertificates.keychain -t certs -o /tmp/certs.pm
## No hash selection, only cn
- name: Keychain | switch certificate to deny trust
  shell: >
    security find-certificate -a -p -c '{{ item }}' /System/Library/Keychains/SystemRootCertificates.keychain > /tmp/certs.pm;
    security add-trusted-cert -d -r deny -k /Library/Keychains/System.keychain /tmp/certs.pm
  with_items: "{{ harden_darwin_certificates_cn_denytrust }}"

- name: Keychain | switch certificate to unspecified trust
  shell: >
    security find-certificate -a -p -c '{{ item }}' /System/Library/Keychains/SystemRootCertificates.keychain > /tmp/certs.pm;
    security add-trusted-cert -d -r unspecified -k /Library/Keychains/System.keychain /tmp/certs.pm
  with_items: "{{ harden_darwin_certificates_cn_unspecifiedtrust }}"

- name: Keychain | switch certificate to trust
  shell: >
    security find-certificate -a -p -c '{{ item }}' /System/Library/Keychains/SystemRootCertificates.keychain > /tmp/certs.pm;
    security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /tmp/certs.pm
  with_items: "{{ harden_darwin_certificates_cn_trust }}"

- name: Keychain | trust extra certificates from orchestrator
  shell: >
    security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain {{ backupdir }}/{{ item | basename }}
  with_items: "{{ harden_darwin_certificates_files }}"
- name: Keychain | trust extra certificates from Internet
  shell: >
    security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain {{ backupdir }}/{{ item.u | basename }}
  with_items: "{{ harden_darwin_certificates_dl }}"
