---

## configuration?
# /var/osquery/osquery.conf
# /var/osquery/osquery.example.conf
# osqueryctl config-check

- name: check if osquery is present
  ansible.builtin.stat: path=/var/osquery
  register: has_osquery
- block:
    - name: push extra osquery packs file
      ansible.builtin.template:
        src: "{{ item }}.conf.j2"
        dest: "/var/osquery/packs/{{ item | basename }}.conf"
        mode: '0644'
      with_items: "{{ harden_darwin_osquery_upload_packs }}"
      notify:
        - restart osquery
    - name: review default packs configuration
      ansible.builtin.replace:
        dest: "{{ item.d }}"
        regexp: "{{ item.re }}"
        replace: "{{ item.rep }}"
        mode: '0644'
        backup: yes
      with_items:
        ## The browser_plugins table returns data based on the current user by default,
        ##      consider JOINing against the users table
        - { d: '/var/osquery/packs/it-compliance.conf',
            re: '"select \* from browser_plugins;"',
            rep: '"select browser_plugins.* from users join browser_plugins using (uid);"'
        }
        - { d: '/var/osquery/packs/incident-response.conf',
            re: '"select \* from shell_history;"',
            rep: '"select shell_history.* from users join shell_history using (uid);"'
        }
    - name: configure osquery
      ansible.builtin.template:
        src: "{{ harden_darwin_osquery_template }}"
        dest: /var/osquery/osquery.conf
        mode: '0644'
        backup: yes
        validate: 'osqueryi --config_path %s --config_check --verbose'
      notify:
        - restart osquery
      environment:
        PATH: '/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin'
    ## https://github.com/facebook/osquery/issues/302
    - name: configure newsyslog for osquery
      ansible.builtin.template:
        src: newsyslog-osquery.conf.j2
        dest: /private/etc/newsyslog.d/osquery.conf
        mode: '0644'
        backup: yes
        validate: 'newsyslog -N -f %s'
        # notify:
        #   - restart newsyslog
    - name: check if service is loaded
      ansible.builtin.command: "launchctl list"
      changed_when: false
      register: launchctllist
    - name: ensure service is enabled and started
      ansible.builtin.command: "/usr/local/bin/osqueryctl start"
      when: >
        launchctllist is defined and
        launchctllist.stdout is defined and
        launchctllist.stdout.find("osqueryd") == -1

    - name: Set osquery configuration profile
      ansible.builtin.template:
        src: "{{ harden_darwin_osquery_template | default('osquery5.mobileconfig.j2') }}"
        dest: /Users/Shared/osquery5.mobileconfig
        mode: '0644'

    - import_tasks: osquery-reporting.yml

  when: has_osquery.stat.exists
