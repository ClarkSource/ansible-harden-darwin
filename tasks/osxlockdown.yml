---

## https://github.com/SummitRoute/osxlockdown only osx 10.11/El Capitan
- stat: path={{ install_archives }}/osxlockdown
  register: osxl
- name: git clone osxlockdown
  git:
    repo=https://github.com/SummitRoute/osxlockdown
    dest={{ install_archives }}/osxlockdown
#  when: "{{ ansible_distribution_version | regex_replace('^(\d+)\.(\d+)\.(\d+)$', '\\1.\\2') }}" == '10.11'
  when: ansible_distribution_version.find('10.11') != -1 and not osxl.stat.exists

## go install with macport or homebrew
- stat: path=/opt/local/bin/port
  register: mp
- stat: path=/opt/local/bin/go
  register: mpgo
- block:
    - block:
        - name: Google Santa | ensure config set to monitor mode
          osx_defaults:
            domain: /var/db/santa/config.plist
            key: ClientMode
            value: 0
            type: "{{ harden_darwin_santa_db_type }}"
          when: (harden_darwin_santa_mode == 'LOCKDOWN' or harden_darwin_santa_mode == 2)

    ## FIXME! not installing correct packages: only get gobject-introspection, goffice
        - name: macports go package install
          macports: name=go state=present
#  async: 3600
#  poll: 300

      always:
        - name: Google Santa | ensure config set to Lockdown mode
          osx_defaults:
            domain: /var/db/santa/config.plist
            key: ClientMode
            value: 2
            type: "{{ harden_darwin_santa_db_type }}"
          when: (harden_darwin_santa_mode == 'LOCKDOWN' or harden_darwin_santa_mode == 2)

    - set_fact:
        GOROOT: /opt/local/lib/go
  when: mp.stat.exists and not mpgo.stat.exists

- stat: path=/usr/local/bin/brew
  register: brew
- block:
    - name: homebrew go package install
      homebrew:
        name: go
        state: present
## Error: Running Homebrew as root is extremely dangerous and no longer supported.\nAs Homebrew does not drop privileges on installation you would be giving all\nbuild scripts full access to your system.
      become: yes
      become_user: "{{ ansible_user | default('travis') }}"
    - set_fact:
        GOROOT: /usr/local/opt/go/libexec
  when: brew.stat.exists and not mp.stat.exists and ansible_user is defined and ansible_user != 'root'

- stat: path=/private/var/root/osxlockdown.audit
  register: osxlfile
- name: build osxlockdown
  shell: "{{ item.c }} chdir={{ item.d }}"
  with_items:
    - { c: "go get gopkg.in/yaml.v2", d: "{{ install_archives }}/osxlockdown" }
    - { c: "go build osxlockdown", d: "{{ install_archives }}/osxlockdown" }
  environment:
    PATH: "/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/local/bin"
    GOROOT: "{{ GOROOT }}"
    GOPATH: "/tmp/gowork"
  become: yes
  when: ansible_distribution_version.find('10.11') != -1 and not osxlfile.stat.exists
  ignore_errors: true
- name: execute osxlockdown - audit mode only
  shell: "./osxlockdown | tee /private/var/root/osxlockdown.audit chdir={{ install_archives }}/osxlockdown"
  environment:
    PATH: "/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/local/bin"
    GOROOT: "{{ GOROOT }}"
    GOPATH: "/tmp/gowork"
  become: yes
  register: osxlout
  when: >
    ansible_distribution_version.find('10.11') != -1 and
    not osxlfile.stat.exists and
    harden_darwin_osxlockdown == 'audit'
  ignore_errors: true
- debug: var=osxlout.stdout_lines
  when: ansible_distribution_version.find('10.11') != -1 and not osxlfile.stat.exists
