---
## https://docs.travis-ci.com/user/osx-ci-environment/
os:
  - osx

env:
# OS X 10.14
  - osx_image: xcode11.2
    suite: default
    ansible_args: -vvvv
# OS X 10.13
  - osx_image: xcode10.1
    suite: default
    ansible_args: -vvvv
# OS X 10.12
#  - osx_image: xcode9.2
#    suite: default
  - osx_image: xcode11.2
    suite: full
    ansible_args: -vv

#language: python
#python: "2.7"
before_install:
  - ln -s ansible-harden-darwin ../juju4.harden-darwin
  - "[ -f get-dependencies.sh ] && sh -x get-dependencies.sh"
  - sw_vers
  - uname -a
  - brew update
  - brew install libidn2 || brew upgrade libidn2
  - brew install openssl
  - brew outdated
# xcode9.2: force python upgrade...
  - if (brew outdated | grep python > /dev/null); then brew upgrade python || brew link --overwrite python; fi
  - if (brew outdated | grep openssl > /dev/null); then brew upgrade openssl || true; fi
  - brew ls --verbose openssl
  - brew update
  - brew doctor || true
  - python --version
#  - pip --version
  - python -c "import ssl; print(ssl.OPENSSL_VERSION)" || true
  - python3 --version
  - python3 -c "import ssl; print(ssl.OPENSSL_VERSION)"
  - pip3 --version || true
#  - which pip
## error: could not create '/Library/Python/2.7/site-packages/ansible': Permission denied
#  - pip install ansible ansible-lint
#  - pip install --user ansible ansible-lint
  - env
  - find .. -ls
#  - find $HOME/Library $HOME/.local -ls || true
  - openssl s_client -connect github.com:443  -cipher 'ALL' < /dev/null || true
  - $(brew --prefix)/opt/openssl/bin/openssl s_client -connect github.com:443  -cipher 'ALL' < /dev/null || true
## workaround to openssl mess
  - sudo install -d -o travis -m755 /private/var/_install
  - brew install curl
  - '[ "X$TRAVIS_OSX_IMAGE" = "Xxcode9.2" ] && curl -L -o /private/var/_install/LuLu_1.1.1.zip https://github.com/objective-see/LuLu/releases/download/1.1.1/LuLu_1.1.1.zip || true'
  - '[ "X$TRAVIS_OSX_IMAGE" = "Xxcode9.2" ] && zipinfo /var/_install/LuLu_1.1.1.zip || true'
  - '[ "X$TRAVIS_OSX_IMAGE" = "Xxcode9.2" ] && curl -L -o /private/var/_install/KnockKnock_1.9.3.zip https://bitbucket.org/objective-see/deploy/downloads/KnockKnock_1.9.3.zip || true'
  - '[ "X$TRAVIS_OSX_IMAGE" = "Xxcode9.2" ] && zipinfo /var/_install/KnockKnock_1.9.3.zip || true'

install:
#  - brew install ansible
  - pip3 install ansible
#  - pip3 install git+https://github.com/ansible/ansible.git@devel
  - python -c 'import ssl; ssl.PROTOCOL_TLSv1_2' || true
  - python3 -c 'import ssl; ssl.PROTOCOL_TLSv1_2'
  - ansible --version
  - which ansible
  - "{ echo '[defaults]'; echo 'roles_path = ../'; } >> ansible.cfg"

script:
  - "echo \"localhost\" > inventory"

#  - "ansible-lint tasks/main.yml"

# Check the role/playbook's syntax.
  - "ansible-playbook -i inventory --syntax-check test/integration/${suite}/default.yml"

# Run the role/playbook with ansible-playbook.
  - "ansible-playbook -i inventory --connection=local --become ${ansible_args} test/integration/${suite}/default.yml"

# Run the role/playbook again, checking to make sure it's idempotent.
## FIXME! known fail
#  - "ansible-playbook -i inventory test/integration/${suite}/default.yml --connection=local --become | tee /tmp/idempotency.log | grep -q 'changed=0.*failed=0'  && (echo 'Idempotence test: pass' && exit 0)  || (echo 'Idempotence test: fail' && cat /tmp/idempotency.log && exit 0)"

after_script:
  - "ls -lhA /Applications/"
  - "[ -f /private/var/root/osxlockdown.audit ] && sudo cat /private/var/root/osxlockdown.audit || true"
  - "ls -lA \"/Library/Application Support/Google/Chrome/External Extensions\""
  - "cp \"/Library/Managed Preferences/com.google.Chrome.plist\" /tmp/chrome.plist && plutil -convert xml1 /tmp/chrome.plist && cat /tmp/chrome.plist"
  - "cat /Applications/Firefox.app/Contents/Resources/distribution/policies.json"
